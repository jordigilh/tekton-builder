---
apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: sonataflow-buildah-pipeline
spec:
  params:
    - default: 'https://github.com/parodos-dev/serverless-workflows.git'
      description: url of the git repo for the code of deployment
      name: GIT_REPOSITORY
      type: string
    - default: 'image-registry.openshift-image-registry.svc:5000'
      description: >-
        image registry where the image will be pushed, defaults to the internal
        OCP image registry
      name: IMAGE_REGISTRY
      type: string
    - description: >-
        name of the sonataflow workflow 
      name: WORKFLOW_NAME
      type: string
  tasks:
    - name: git-clone
      params:
        - name: url
          value: $(params.GIT_REPOSITORY)
      taskRef:
        kind: ClusterTask
        name: git-clone
      workspaces:
        - name: output
          workspace: shared-workspace
    - name: collect-workflow-data
      runAfter:
        - git-clone
      params:
        - name: PATH
          value: $(workspaces.source.path)/$(params.WORKFLOW_NAME)
        - name: WORKFLOW_NAME
          value: $(params.WORKFLOW_NAME)
      taskSpec:
        params:
          - name: PATH
            type: string
          - name: WORKFLOW_NAME
            type: string
        results:
          - description: The workflow id in the workflow definition
            name: workflow-id
            type: string
          - description: The workflow version in the workflow definition
            name: workflow-version
            type: string
        spec: null
        steps:
          - computeResources: {}
            image: mikefarah/yq
            name: run-yq
            script: |
              #!/usr/bin/env sh
              set -eu
              # printf remove newlines
              printf %s $(yq -oy '.version // "1.0.0"' $(params.PATH)/$(params.WORKFLOW_NAME).sw.yaml) | tr '[:upper:]' '[:lower:]' | tee "$(results.workflow-version.path)" 
              printf %s $(yq -oy '.id' $(params.PATH)/$(params.WORKFLOW_NAME).sw.yaml) | tr '[:upper:]' '[:lower:]' | tee "$(results.workflow-id.path)"
        workspaces:
          - name: source
            readOnly: true
      workspaces:
        - name: source
          workspace: shared-workspace
    - name: buildah
      params:
        - name: CONTEXT
          value: ' '
        - name: IMAGE
          value: |
            $(params.IMAGE_REGISTRY)/$(context.pipelineRun.namespace)/serverless-workflow-$(tasks.collect-workflow-data.results.workflow-id):$(tasks.collect-workflow-data.results.workflow-version)
        - name: DOCKERFILE
          value: $(workspaces.source.path)/pipeline/workflow-builder.Dockerfile
        - name: BUILD_EXTRA_ARGS
          value: |
            --ulimit nofile=4096:4096 \
            --build-arg WF_RESOURCES=$(params.WORKFLOW_NAME)/ \
            --build-arg QUARKUS_EXTENSIONS=org.kie.kogito:kogito-addons-quarkus-jobs-knative-eventing:999-SNAPSHOT \
      runAfter:
        - collect-workflow-data
      taskRef:
        kind: Task
        name: buildah
      workspaces:
        - name: source
          workspace: shared-workspace
        - name: dockerconfig
          workspace: dockerconfig
  workspaces:
    - name: shared-workspace
    - name: dockerconfig
